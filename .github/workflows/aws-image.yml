name: 'Deploy to AWS CloudFormation'

on: 
  push:
    branches: [ EKS ]
  pull_request:
    branches: [ EKS ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "deploy"
   build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
                   
      # Runs a single command using the runners shell
      - name: Lint code
        run: echo "Linting repository!"

      # Runs a set of commands using the runners shell
      - name: Run unit tests
        run: |
          echo "Running unit tests"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: bitbucket
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
   deploy:
     needs: [ build ]
     runs-on: ubuntu-latest
     steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2
 
      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
    
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

  
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
    
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
